// cryptosense_backend/config/doc.js
const fs = require('fs');
const path = require('path');
const yaml = require('js-yaml');
const glob = require('glob');

// –ü—É—Ç–∏
const docsPath = path.join(__dirname, '../docs'); // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ docs
const outputPath = path.join(docsPath, 'main.swagger.yaml'); // –ü—É—Ç—å –∫ –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ .swagger.yaml —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ docs (–∏—Å–∫–ª—é—á–∞–µ–º main.swagger.yaml)
const swaggerFiles = glob.sync(path.join(docsPath, '*.swagger.yaml')).filter(file => !file.includes('main.swagger.yaml'));

console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:', swaggerFiles);

// –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ OpenAPI
const mergedData = {
  openapi: '3.0.0',
  info: {
    title: 'CryptoSense API',
    version: '1.0.0',
    description: '–û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–∞—è API-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
  },
  paths: {},
};

// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
swaggerFiles.forEach(file => {
  try {
    const content = yaml.load(fs.readFileSync(file, 'utf8'));
    if (content.paths) {
      Object.assign(mergedData.paths, content.paths);
    }
    console.log(`üìÑ –û–±—ä–µ–¥–∏–Ω—ë–Ω: ${file}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: ${file}`, error);
  }
});

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π —Ñ–∞–π–ª
fs.writeFileSync(outputPath, yaml.dump(mergedData), 'utf8');
console.log(`üéâ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—ä–µ–¥–∏–Ω—ë–Ω: ${outputPath}`);
